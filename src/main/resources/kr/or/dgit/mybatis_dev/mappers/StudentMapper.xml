<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.mybatis_dev.dao.StudentDao">
		<sql id="selectSql">
			select stud_id, name, email, dob, phone
			from students			
		</sql>
		
		<sql id="insertSql">
			insert into students(stud_id,name,email,phone,dob)
			values(#{studId},#{name},#{email},#{phone},#{dob}) 		
		</sql>
		
		<sql id="whereSql">
			<where>
				<if test="studId != null">
					stud_id=#{studId}	
				</if>
			</where>
		</sql>
		
		<sql id="updateSql">
			UPDATE STUDENTS SET NAME = #{name}, EMAIL =#{email}, PHONE=#{phone}, DOB=#{dob}
			WHERE STUD_ID = #{studId}
		</sql>
		
		<sql id="deleteSql">
			DELETE FROM STUDENTS WHERE STUD_ID=#{studId}
		</sql>
		
		<select id="selectStudentByNo" parameterType="Student" resultType="Student">
			<include refid="selectSql"/>
			where stud_id=#{studId}
		</select>
		
		<select id="selectStudentByAll" parameterType="Student" resultType="Student">
			<include refid="selectSql"/>
		</select>
		
		<select id="selectStudentByNoWithAPI" parameterType="Student" resultType="Student">
			<include refid="selectSql"/>
			<include refid="whereSql"/>
		</select>
		
		<select id="selectStudentByAllWithAPI" parameterType="Student" resultType="Student">
			<include refid="selectSql"/>
		</select>
		
		<insert id="insertStudent" parameterType="Student">
			<include refid="insertSql"/>
		</insert>
		
		<insert id="insertStudentWithAPI" parameterType="Student" >
			<include refid="insertSql"/>
		</insert>
		
		<insert id="insertStudentAutoInc" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
			insert into students(stud_id,name,email,phone,dob)
			values(#{studId},#{name},#{email},#{phone},#{dob}) 	
		</insert>
		
		<update id="updateStudent" parameterType="Student">
			<include refid="updateSql"/>
		</update>
		<update id="updateStudentWithAPI" parameterType="Student">
			<include refid="updateSql"/>
		</update>
		
		<delete id="deleteStudent">
			<include refid="deleteSql"/>
		</delete>
		
		<delete id="delteStudentWithAPI">
			<include refid="deleteSql"/>
		</delete>
		
		 <resultMap id="StudentResult" type="Student">
			<id property="studId" column = "stud_id"/>
			<result property="name" column = "name"/>
			<result property="email" column = "email"/>
			<result property="phone" column = "phone"/>
			<result property="dob" column = "db"/>
		</resultMap>		
		
		<select id="selectStudentByAllForResultMap" resultMap="StudentResult">
			<include refid="selectSql" />
		</select>
		
		<select id="selectStudentByAllForResultMapWithAPI" resultMap="StudentResult">
			<include refid="selectSql" />
		</select> 
		
		<select id="selectStudentByAllForHashMap" resultType="map">
			<include refid="selectSql"/>
		</select>
		
		<select id="selectStudentByAllForHashMapWithAPI" resultType="map">
			<include refid="selectSql"/>
		</select>
		
		<resultMap type="Student" id="StudentWithAddressResult" extends="StudentResult">
			<result property="address.addrId" column="addr_id"/>
			<result property="address.street" column="street"/>
			<result property="address.city" column="city"/>
			<result property="address.state" column="state"/>
			<result property="address.zip" column="zip"/>
			<result property="address.country" column="country"/>
		</resultMap>		
		
		<sql id="selectJoinAddressSql">
			SELECT STUD_ID, NAME, EMAIL, PHONE, A.ADDR_ID, STREET, CITY, STATE, ZIP, COUNTRY
			FROM STUDENTS S LEFT OUTER JOIN ADDRESSES A ON S.ADDR_ID=A.ADDR_ID
		</sql>
		
		<select id="selectStudentByNoForResultMapExtends" parameterType="Student" resultMap="StudentWithAddressResult">
			<include refid="selectJoinAddressSql"/>
			<include refid="whereSql"/>
		</select>
		
		<select id="selectStudentByNoForResultMapExtendsWithAPI" parameterType="Student" resultMap="StudentWithAddressResult">
			<include refid="selectJoinAddressSql"/>
			<include refid="whereSql"/>
		</select>
		
		
		<resultMap type="Student" id="StudentAssociation">
			<association property="address" resultMap="kr.or.dgit.mybatis_dev.dao.AddressDao.AddressResult"/>
		</resultMap>
		
		<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
			<include refid="selectJoinAddressSql"/>
			<include refid="whereSql"/>
		</select>
		
		<select id="selectStudentByNoAssociationWithAPI" parameterType="Student" resultMap="StudentAssociation">
			<include refid="selectJoinAddressSql"/>
			<include refid="whereSql"/>
		</select>
		
		<!-- enum 타입 다루기  -->
		
		<sql id="insertEnumSql">
			INSERT INTO STUDENTS(STUD_ID, NAME, EMAIL, PHONE, DOB, GENDER)
			VALUES (#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
		</sql>
				
		<insert id="insertEnumStudent" parameterType = "Student" useGeneratedKeys="true" keyProperty="studId">
			<include refid="insertEnumSql"/>
		</insert>
		
		<insert id="insertEnumStudentWithAPI" parameterType="Student" useGeneratedKeys="true" keyProperty="studId">
			<include refid="insertEnumSql"/>
		</insert>
		
		<resultMap type="Student" id="StudentGenderResult" extends="StudentResult">
			<result property="gender" column="gender"/>
		</resultMap>
		
		<sql id="selectParameterSql">
			select stud_id, name, email, phone, dob, gender from students
		</sql>
		
		<sql id="whereNameEmailSql">
			<where>
				<if test="name != null">
				name = #{name}
				</if>
				<if test="email != null">
					AND email = #{email}
				</if>
			</where>
		</sql>
		
		<select id="selectAllStudentByParam" resultMap = "StudentGenderResult">
			<include refid="selectParameterSql"/>
			where name=#{param1} and email=#{param2}
		</select>
		
		<select id="selectAllStudentByStudent" parameterType="Student" resultMap="StudentGenderResult">
			<include refid="selectParameterSql"/>
			<include refid="whereNameEmailSql"/>
		</select>
		
		<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
			<include refid="selectParameterSql"/>
			<include refid="whereNameEmailSql"/>
		</select>
		
		<select id="selectStudentForMap" resultMap="StudentGenderResult">
			<include refid="selectParameterSql"/>
		</select>
</mapper>